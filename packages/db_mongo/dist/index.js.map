{"version":3,"sources":["../src/index.ts","../src/client.ts"],"sourcesContent":["export * from \"./client\";\r\n","// import { PrismaClient } from \"@prisma/client\";\r\nimport { PrismaClient } from \"@prisma/client\";\r\n\r\n// declare global {\r\n//   var prisma: PrismaClient | undefined;\r\n// }\r\ndeclare global {\r\n  var prisma: PrismaClient | undefined; // This must be a `var` and not a `let / const`\r\n}\r\n\r\n// let prisma: PrismaClient;\r\nexport const prisma =\r\n  global.prisma ||\r\n  new PrismaClient({\r\n    log: [\"query\"],\r\n  });\r\n// export const client = global.prisma || new PrismaClient();\r\n// export const clientMg = global.prisma || new PrismaClient();\r\nexport const client = global.prisma || new PrismaClient();\r\n\r\n// export const client = new PrismaClient();\r\n\r\nif (process.env.NODE_ENV !== \"production\") global.prisma = prisma;\r\n\r\nexport * from \"@prisma/client\";\r\n\r\n\r\n// import { PrismaClient } from '@prisma/client'\r\n\r\n// const prismaClientSingleton = () => {\r\n//   return new PrismaClient()\r\n// }\r\n\r\n// type PrismaClientSingleton = ReturnType<typeof prismaClientSingleton>\r\n\r\n// const globalForPrisma = globalThis as unknown as {\r\n//   prisma: PrismaClientSingleton | undefined\r\n// }\r\n\r\n// const prisma = globalForPrisma.prisma ?? prismaClientSingleton()\r\n\r\n// if (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma\r\n\r\n// export default prisma\r\n\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;AACA,oBAA6B;AAuB7B,2BAAc;AAbP,IAAM,SACX,OAAO,UACP,IAAI,2BAAa;AAAA,EACf,KAAK,CAAC,OAAO;AACf,CAAC;AAGI,IAAM,SAAS,OAAO,UAAU,IAAI,2BAAa;AAIxD,IAAI,QAAQ,IAAI,aAAa;AAAc,SAAO,SAAS;;;ADtB3D,wBAAc,gBAAd;","names":[]}